{"version":3,"sources":["img/icon.png","img/signin.png","img/gdsicon.png","containers/login.js","containers/signin.js","containers/signup.js","containers/dashboard.js","containers/partnerApps.js","containers/history.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Login","className","src","gdsicon","alt","to","value","Component","Signin","icon","type","name","placeholder","required","Signup","Dashboard","PartnerApps","History","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.889233d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.c241c4e3.png\";","module.exports = __webpack_public_path__ + \"static/media/signin.d7033151.png\";","module.exports = __webpack_public_path__ + \"static/media/gdsicon.5b043dcf.png\";","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport gdsicon from './../img/gdsicon.png';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"wrap\">\n                <div className=\"container\">\n                    <div className=\"login\">\n                        <div className=\"title\">\n                            <p className=\"text-center\">GDS Agent App</p>\n                        </div>\n                        <div className=\"content\">\n                            <div className=\"logo\">\n                                <img src={gdsicon} alt=\"GDS\"/>\n                            </div>\n                            <button className=\"btn-com\">\n                                <Link to=\"/signin\" className=\"cl-white\" value=\"dashboard\">Login</Link>\n                            </button>\n                            <button className=\"btn-com\">\n                                <Link to=\"/signup\" className=\"cl-white\" value=\"dashboard\">Signup</Link>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React,{ Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport icon from '../img/icon.png';\nimport singin from '../img/signin.png';\nclass Signin extends Component {\n    render() {\n        return(\n            <div className=\"wrap\"><div className=\"container\">\n                <div className=\"singin\">\n                    <div className=\"title\">\n                        <p className=\"text-center\">GDS Agent App</p>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"signin\">\n                            <p className=\"title\">Sing In</p>\n                            <img src={icon} alt=\"SIGNIN\"/>\n                        </div>\n                        <div className=\"form\">\n                            <input type=\"text\" name=\"\" placeholder=\"Email\" required=\"\"/>\n                            <input type=\"text\" name=\"\" placeholder=\"Password\" required=\"\"/>\n                            <button className=\"btn-com btn-m-t\"><Link to=\"/dashboard\" className=\"cl-white\" value=\"dashboard\">SIGN IN</Link></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\nexport default Signin;\n","import React,{ Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport icon from '../img/icon.png';\nimport singin from '../img/signin.png';\nclass Signup extends Component {\n    render() {\n        return(\n            <div className=\"wrap\"><div className=\"container\">\n                <div className=\"singup\">\n                    <div className=\"title\">\n                        <p className=\"text-center\">GDS Agent App</p>\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"signin\">\n                            <p className=\"title\">Sing Up</p>\n                            <img src={icon} alt=\"SIGNUP\"/>\n                        </div>\n                        <div className=\"form\">\n                            <input type=\"text\" name=\"\" placeholder=\"Name\" required=\"\"/>\n                            <input type=\"text\" name=\"\" placeholder=\"Phone\" required=\"\"/>\n                            <input type=\"text\" name=\"\" placeholder=\"Email\" required=\"\"/>\n                            <input type=\"text\" name=\"\" placeholder=\"Password\" required=\"\"/>\n                            <input type=\"text\" name=\"\" placeholder=\"Comfirm\" required=\"\"/>\n                            <button className=\"btn-com btn-m-t\"><Link to=\"/signin\" className=\"cl-white\" value=\"dashboard\">Sing Up</Link></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\nexport default Signup;\n","import React,{ Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { IoMdListBox } from 'react-icons/io';\n\nclass Dashboard extends Component{\n    render() {\n        return(\n            <div className=\"wrap\">\n                    <div className=\"dashboard main-content\">\n                        <div className=\"title\">\n                            <p className=\"text-center\">\n                                <Link to=\"/signin\" className=\"cl-white bk-btn\" value=\"dashboard\"><TiArrowBackOutline/></Link>GDS Agent App</p>\n                        </div>\n                        <div className=\"balance inn-content\">\n                            <ul className=\"list\">\n                                <li>\n                                    <p>Balance  <i className=\"float-right\"> 20000 ks</i></p>\n                                </li>\n                            </ul>\n                            <div className=\"app\"><Link to=\"/partnerApp\"><AiFillPlusCircle/></Link></div>\n                            <div className=\"history-list\"><Link to=\"/history\"><IoMdListBox/></Link></div>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\nexport default Dashboard;\n","import React,{ Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nclass PartnerApps extends Component{\n    render() {\n        return(\n            <div className=\"wrap\">\n                <div className=\"dashboard main-content\">\n                    <div className=\"title\">\n                        <p className=\"text-center\">\n                            <Link to=\"/dashboard\" className=\"cl-white bk-btn\" value=\"dashboard\"><TiArrowBackOutline/></Link>GDS Agent App</p>\n                    </div>\n                    <div className=\"history inn-content\">\n                        <p className=\"text-center\">HandlePatner Apps</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default PartnerApps;\n","import React,{ Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nclass History extends Component{\n    render() {\n        return(\n            <div className=\"wrap\">\n                <div className=\"dashboard main-content\">\n                    <div className=\"title\">\n                        <p className=\"text-center\">\n                            <Link to=\"/dashboard\" className=\"cl-white bk-btn\" value=\"dashboard\"><TiArrowBackOutline/></Link>GDS Agent App</p>\n                    </div>\n                    <div className=\"history inn-content\">\n                        <div className=\"detail\">\n                            <p className=\"name\">U MG</p>\n                            <p className=\"acc\">097728393883483334</p>\n                            <p className=\"amount\">MMK - 300,000 </p>\n                        </div>\n                        <div className=\"detail\">\n                            <p className=\"name\">U Mya</p>\n                            <p className=\"acc\">0098393883483334</p>\n                            <p className=\"amount\">MMK - 100,000 </p>\n                        </div>\n                        <div className=\"detail\">\n                            <p className=\"name\">U Hla</p>\n                            <p className=\"acc\">100879393883483334</p>\n                            <p className=\"amount\">MMK - 200,000 </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default History;\n","import React,{ Component} from 'react';\nimport {\n    Route,\n    BrowserRouter as Router,\n} from \"react-router-dom\";\nimport Login from './containers/login';\nimport Signin from './containers/signin';\nimport Signup from './containers/signup';\nimport Dashboard from './containers/dashboard';\nimport PartnerApps from './containers/partnerApps';\nimport History from './containers/history';\n\nclass App extends Component {\n    render(){\n        return (\n            <Router>\n                <div>\n                    <Route exact path=\"/\" component={Login}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/signin\" component={Signin}/>\n                    <Route exact path=\"/signup\" component={Signup}/>\n                    <Route exact path=\"/dashboard\" component={Dashboard}/>\n                    <Route exact path=\"/partnerApp\" component={PartnerApps}/>\n                    <Route exact path=\"/history\" component={History}/>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './all.css';\nimport './reset.css';\nimport './index.css';\n\n// import 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\n// import Login from './containers/login';\n// import Dashboard  from './containers/dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}